<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.gruposantander</groupId>
	<artifactId>subscriberSarq</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>subscriberSarq</name>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<deploy>${project.artifactId}-${project.version}</deploy>
		<jacoco-plugin.version>0.8.2</jacoco-plugin.version>
		<avro.version>1.8.2</avro.version>
		<confluent.version>5.1.2</confluent.version>
	</properties>

	<dependencies>
		<dependency>
			 <groupId>com.gruposantander</groupId>
	  		<artifactId>sarqAvroSchemas</artifactId>
	  		<version>0.0.1-SNAPSHOT</version>
  		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-stream-schema</artifactId>
		</dependency>
		<!-- LOMBOK -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- LOG 4J2 -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
		<!-- DB in DEVELOPMENT -->
		<dependency>
		 	<groupId>com.h2database</groupId>
		 	<artifactId>h2</artifactId>
		</dependency>
		<!-- Api Rest. JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<!-- AVRO -->
        <dependency>
          	<groupId>org.apache.avro</groupId>
          	<artifactId>avro</artifactId>
          	<version>${avro.version}</version>
        </dependency>
         <dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
			<version>5.1.2</version>
		</dependency>
		<!-- Squema Registry -->
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-schema-registry-client</artifactId>
			<version>5.1.2</version>
		</dependency>
		<!-- ================ TEST ================== -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry</artifactId>
             <version>5.1.2</version>
            <scope>test</scope>
        </dependency>
		<dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry</artifactId>
            <version>5.1.2</version>
            <!-- Required for e.g. schema registry's RestApp -->
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- ================ TEST extensions================== -->
	<!-- Unit Test: **/*Test -->
	<!-- Integration Test: **/*IT -->
	<!-- Functional Test: **/*FunctionalTesting -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*FunctionalTesting</include>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			        <version>${jacoco-plugin.version}</version>
			        <executions>
			            <execution>
			                <id>pre-unit-test</id>
			                <goals>
			                    <goal>prepare-agent</goal>
			                </goals>
			            </execution>
			                <execution>
			                    <id>default-report</id>
			                    <phase>package</phase>
			                    <goals>
			                        <goal>report</goal>
			                    </goals>
			            </execution>
			        </executions>
			</plugin>
			<plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-maven-plugin</artifactId>
                <version>${confluent.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>download</goal>
                        </goals>
                        <configuration>
                            <schemaRegistryUrls>
                                <param>${schema.registry.url}</param>
                            </schemaRegistryUrls>
                            <outputDirectory>${project.basedir}/src/main/resources/avro</outputDirectory>
                            <subjectPatterns>
                                <param>Custodian</param>
                            </subjectPatterns>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>${avro.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
							<goal>protocol</goal>
							<goal>idl-protocol</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.basedir}/src/main/resources/avro</sourceDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<pluginRepositories>
		<pluginRepository>
			<id>confluent</id>
			<url>http://packages.confluent.io/maven/</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>confluent</id>
			<name>Confluent</name>
			<url>http://packages.confluent.io/maven/</url>
		</repository>
	</repositories> 
	
	<!-- <pluginRepositories>
		<pluginRepository>
			<name>Serenity Maven Central</name>
            <id>serenity_maven_central</id>
            <url>https://nexus.alm.gsnetcloud.corp/repository/maven-public/</url>
		</pluginRepository>
	</pluginRepositories>
	
	 <repositories>
        <repository>
            <name>Serenity Maven Central</name>
            <id>serenity_maven_central</id>
            <url>https://nexus.alm.gsnetcloud.corp/repository/maven-public/</url>
        </repository>
    </repositories>  -->
	
</project>
